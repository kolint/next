#!/usr/bin/env bun
import { exists } from "node:fs/promises";
import { join } from "node:path";
import { createProjectGraphAsync } from "nx/src/project-graph/project-graph";

const projectGraph = await createProjectGraphAsync({
  exitOnError: true,
});

const projectRootPaths = Object.values(projectGraph.nodes).map(
  (node) => node.data.root,
);

const references = [];
for (const path of projectRootPaths) {
  const tsconfigPath = join(path, "tsconfig.json");
  if (await exists(tsconfigPath)) {
    references.push(tsconfigPath);
  }
}
references.sort();

const content = `{
// Automatically generated by tools/scripts/prepare.
"references": [
  ${references
    .map((path) => `{ "path": ${JSON.stringify(path)} }`)
    .join(",\n    ")}
],
"include": []
}\n`;
await Bun.write("tsconfig.json", content);
